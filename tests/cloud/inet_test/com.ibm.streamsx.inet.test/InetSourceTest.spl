/*
*******************************************************************************
* Copyright (C) 2010,2019, International Business Machines Corporation. 
* All Rights Reserved. *
*******************************************************************************
*/

namespace com.ibm.streamsx.inet.test;

use com.ibm.streamsx.inet::InetSource;

/**
 * InetSourceTest 
 * Contacts NOAA for some weather information.  
 * Ouputs something like the following:
 * 
 * result: 2016/12/15 23:55 KRCM 152355Z AUTO 09005KT 10SM CLR M05/M15 A3030 RMK AO2
 * result: 2016/12/16 00:55 KRCM 160055Z AUTO 09004KT 10SM SCT055 M05/M15 A3028 RMK AO2
 * result: 2016/12/16 01:55 KRCM 160155Z AUTO 10008KT 10SM OVC050 M05/M15 A3027 RMK AO2
 * 
 * see http://www.nws.noaa.gov/tg/datahelp.php for details
 */
composite InetSourceTest
{
	graph
		stream<rstring result> InetTest = InetSourceTestComp() {
		}	
} 

public composite InetSourceTestComp (output TestResult)
{
	graph
		stream<list<rstring> result> Result = InetSource()
		{
			param
				URIList : ["http://tgftp.nws.noaa.gov/data/observations/metar/cycles/00Z.TXT",
					   "http://tgftp.nws.noaa.gov/data/observations/metar/cycles/01Z.TXT",
					   "http://tgftp.nws.noaa.gov/data/observations/metar/cycles/02Z.TXT"];
				incrementalFetch : true;
				inputLinesPerRecord : 3u;
				fetchInterval : 5.0;
				emitTuplePerURI : true;
		}

		stream<rstring result> TestResult = Custom(Result as I){
		logic
			onTuple I : {
				printStringLn("result: " + result[0]);
				submit ({result=""}, TestResult);
			}
		}
}
