use com.ibm.streamsx.inet.http::HTTPRequest;
use com.ibm.streamsx.testframe::FileSink1;

public composite Main {
	param
		//<0 3>expression<rstring> $url: 'http://' + getCompileTimeValue("host") + '/hello';
		//<1 4>expression<rstring> $url: 'http://' + getCompileTimeValue("host") + '/gzip';
		//<2 5>expression<rstring> $url: 'http://'+ getCompileTimeValue("host") + '/deflate';
		//<0 1 2>expression<boolean> $disableComp: false;
		//<3 4 5>expression<boolean> $disableComp: true;
	graph
		stream<uint64 id, rstring method> Trigger as O = Beacon() {
			param 
				iterations : 1;
			output O:
				id = IterationCount(),
				method = "GET";
		}
		
		stream<uint64 id, int32 stat, rstring respData, rstring contentEncoding, list<rstring> outHeaders> Response as O = HTTPRequest(Trigger as I) {
			param
				fixedUrl: $url;
				method : method;
				//extraHeaders : "Cache-Control: no-cache";
				outputBody : "respData";
				outputStatusCode : "stat";
				outputContentEncoding : "contentEncoding";
				outputHeader : "outHeaders";
				disableContentCompression : $disableComp;
		}
		
		() as Sink = FileSink1(Response) { }
		
	
	config
		restartable : false;
}
