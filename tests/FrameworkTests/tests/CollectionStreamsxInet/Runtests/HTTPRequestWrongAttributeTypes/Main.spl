use com.ibm.streamsx.inet.http::HTTPRequest;
use com.ibm.streamsx.testframe::FileSink1;

public composite Main {
	param
		expression<rstring> $url: getSubmissionTimeValue("url", "http://" + getCompileTimeValue("host") + '/get');
		expression<rstring> $data:  getSubmissionTimeValue("data", "my data");
	graph
		stream<uint64 id, rstring method, rstring data> Trigger as O = Beacon() {
			param 
				iterations : 1;
			output O:
				id = IterationCount(),
				method = "GET",
				data = $data;
		}
		
		//<0 1 2 3>stream<uint64 id, rstring method, rstring url, list<rstring> myAttribute, uint32 stat>
		//<4>stream<uint64 id, rstring method, rstring url, rstring myAttribute, uint32 stat>
		//<5>stream<uint64 id, rstring method, rstring url, list<uint64> myAttribute, uint32 stat>
		//<6>stream<uint64 id, rstring method, rstring url, list<rstring> myAttribute, uint32 stat>
		//<7>stream<uint64 id, rstring method, rstring url, list<rstring> myAttribute, uint32 stat>
		//<8>stream<uint64 id, rstring method, rstring url, float64 myAttribute, int32 stat>
		//<9>stream<uint64 id, rstring method, rstring url, rstring myAttribute, int32 stat>
		Response = HTTPRequest(Trigger) {
			param
				fixedUrl: $url;
				method : method;
				//<!9>requestBodyAttribute : data;
				//<9>requestBodyAttributeBin : data;
				//<0>outputDataLine: "myAttribute";
				//<1>outputBody: "myAttribute";
				//<2>outputContentEncoding: "myAttribute";
				//<3>outputContentType: "myAttribute";
				//<4>outputHeader: "myAttribute";
				//<5>outputHeader: "myAttribute";
				//<6>outputStatus: "myAttribute";
				//<7>outputStatusCode: "stat";
				//<8>errorDiagnostics: "myAttribute";
				//<8>outputStatusCode: "stat";
		}

		() as Sink = FileSink1(Response) { }

	config
		restartable : false;
}
