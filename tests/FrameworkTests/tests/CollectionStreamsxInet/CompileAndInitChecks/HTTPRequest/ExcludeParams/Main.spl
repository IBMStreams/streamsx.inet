use com.ibm.streamsx.inet.http::*;

composite Main {
	graph
		stream<uint64 id, rstring url, rstring method> Trigger as O = Beacon() {
			param 
				iterations : 3;
				period : 0.1;
			output O:
				id = IterationCount();
		}
		
		() as Sink = HTTPRequest(Trigger as I) {
			param
				//_0_fixedUrl: "http://httpbin.org/get";
				//_0_url: url;
				//_0_fixedMethod : GET;

				//_1_url: url;
				//_1_fixedMethod : GET;
				//_1_method : method;

				//_2_url: url;
				//_2_fixedContentType : "application/json";
				//_2_contentType : method;

				//_3_url: url;

				//_4_fixedUrl: "http://httpbin.org/get";

				//_5_method: method;

				//_6_fixedMethod : GET;

				//_7_url: url;
				//_7_method: method;
				//_7_outputDataLine: "data";
				//_7_outputBody: "body";

				//_8_url: url;
				//_8_method: method;
				//_8_sslAcceptAllCertificates: true;
				//_8_sslTrustStoreFile: "myfile";
				//_8_sslTrustStorePassword: "mypass";

				//_9_url: url;
				//_9_method: method;
				//_9_sslAcceptAllCertificates: false;
				//_9_sslTrustStoreFile: "myfile";
				//_9_sslTrustStorePassword: "mypass";

				//_10_url: url;
				//_10_method: method;
				//_10_sslTrustStoreFile: "myfile";

				//_11_url: url;
				//_11_method: method;
				//_11_sslTrustStorePassword: "mypass";
		}
}

