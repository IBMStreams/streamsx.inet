use com.ibm.streamsx.inet.ftp::*;

public composite Main {

    graph
        //provide a trigger stream for the ftp directory scan
        stream<rstring path, rstring file> TriggerStream = Beacon() {
            param
                initDelay : 2.0;
                iterations : 2;
                period : 10.0;
            output TriggerStream : path = "path", file="file";
            config placement : partitionColocation("DIR");
        }

        //scan the remote directory
        (
          stream<uint64 size, rstring url, boolean success, uint32 transferCount, uint32 failureCount, uint64 bytesTransferred, rstring path> FilenameStream as OUT;
        //<!wrongDefaultErrAtt>stream<rstring errorText, int32 error, uint32 transferCount, uint32 failureCount, uint64 bytesTransferred> ErrorStream as ERR
        //<wrongDefaultErrAtt>stream<uint32 transferCount> ErrorStream as ERR
        ) = FTPPutFile(TriggerStream) {
            param
                //<!noParmProt>protocol : ftp;
                //<paramDirReader>isDirReader : true;
                //<!noParmHost>host : "localhost";
                //<!noPath>path : "/";
                //<!noParmUser>username : "ftpuser";
                //<!noParamLocalFile>localFilename : path;
                filename : "file.tmp";
                renameTo : file;
                curlVerbose : true;
            output
                //<!noOutFunc1>OUT :
                //<!noOutFunc1>    size = FileSize(),
                //<!noOutFunc1>    transferCount = TransferCount(),
                //<!noOutFunc1>    failureCount = TransferFailureCount(),
                //<!noOutFunc1>    bytesTransferred = BytesTransferred();
                //<!wrongDefaultErrAtt>ERR:
                //<!wrongDefaultErrAtt>    errorText = ErrorText(),
                //<!wrongDefaultErrAtt>    error = ErrorCode(),
                //<!wrongDefaultErrAtt>    transferCount = TransferCount(),
                //<!wrongDefaultErrAtt>    failureCount =  TransferFailureCount(),
                //<!wrongDefaultErrAtt>    bytesTransferred = BytesTransferred();
            config placement : partitionColocation("DIR");
        }
        //print the results
        () as DirTap = ResultSink(FilenameStream) {
            param
                what : "DIRSCAN: ";
                loc : "DIRTAP";
        }
        () as ErrorTap = ResultSink(ErrorStream) {
            param
                what : "DIRERROR: ";
                loc : "DIRTAP";
        }
}

composite ResultSink (input IN) {
    param
        expression<rstring> $what;
        expression<rstring> $loc;
    graph
        () as Sink = Custom(IN) {
            logic
                state : rstring what_ = $what;
                onTuple IN : {
                    timestamp t = getTimestamp();
                    rstring str = ctime(t) + " " + (rstring)getNanoseconds(t) + (rstring)IN;
                    printStringLn(what_ + str);
                }
                onPunct IN : {
                    timestamp t = getTimestamp();
                    rstring str = ctime(t) + " " + (rstring)getNanoseconds(t) + " " + (rstring)currentPunct();
                    printStringLn(what_ + str);
                }
            config placement : partitionColocation($loc);
        }
}
