use com.ibm.streamsx.inet.http::HTTPRequest;
use com.ibm.streamsx.testframe::FileSink1;

public composite Main {
	param
		//<0 4 8>expression<rstring> $url:  'http://' + getCompileTimeValue("host") + '/redirect-to?url=http://' + getCompileTimeValue("host") + '/get&status_code=307';
		//<1 5 9>expression<rstring> $url:  'http://' + getCompileTimeValue("host") + '/redirect-to?url=http://' + getCompileTimeValue("host") + '/head&status_code=307';
		//<2 6 10>expression<rstring> $url: 'http://' + getCompileTimeValue("host") + '/redirect-to?url=http://' + getCompileTimeValue("host") + '/post&status_code=307';
		//<3 7 11>expression<rstring> $url: 'http://' + getCompileTimeValue("host") + '/redirect-to?url=http://' + getCompileTimeValue("host") + '/put&status_code=307';

	graph
		stream<uint64 id, rstring method, rstring data> Trigger as O = Beacon() {
			param 
				iterations : 1;
			output O:
				id = IterationCount(),
				//<0 4 8>method = "GET",
				//<1 5 9>method = "HEAD",
				//<2 6 10>method = "POST",
				//<3 7 11>method = "PUT",
				data = "My data";
		}
		
		stream<uint64 id, rstring method, rstring url, rstring status, int32 stat, rstring respData, rstring err> Response as O = HTTPRequest(Trigger as I) {
			param
				fixedUrl: $url;
				method: method;
				requestBodyAttribute : data;
				outputBody : "respData";
				outputStatus : "status";
				outputStatusCode : "stat";
				errorDiagnostics : "err";
				//<4 5 6 7>redirectStrategy: "LAX";
				//<8 9 10 11>redirectStrategy: "NONE";
		}
		
		() as Sink = FileSink1(Response) { }
		
	
	config
		restartable : false;
}
