<?xml version="1.0" encoding="UTF-8"?>
<!--
# Licensed Materials - Property of IBM
# Copyright IBM Corp. 2011, 2013, 2014
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
-->

<!-- 
Found that if you built under Streams studio, *$StreamsModel.java
artifacts were left around and caused issues with the ant build.
-->

<!--
We do not use maven downloads any longer
All required libs are now available in the source repository
-->

<project name="com.ibm.streamsx.inet" basedir="." default="all">

	<property environment="env" />
	<property name="streams.install"   value="${env.STREAMS_INSTALL}" />

	<property name="src.dir"           location="impl/java/src" />
	<property name="build.dir"         location="impl/java/classes" />
	<property name="impl.lib.dir"      location="impl/lib" /> <!-- used for the libs -->
	<property name="lib.dir"           location="lib" />      <!-- used for cleanup only -->
	<property name="nl.dir"            location="impl/nl" />
	<property name="gensrc.dir"        location="impl/java/src-gen" />
	<property name="test.run.dir"      location="tests" />
	<property name="test.build.dir"    location="${test.run.dir}/bin" />
	<property name="downloads.dir"     location="opt/downloaded" /> <!-- used for cleanup only -->
	<property name="jarfile"           value="com.ibm.streamsx.inet.jar" />

	<defaultexcludes add="**/.gitkeep"/>

	<path id="cp.streams">
		<pathelement location="${streams.install}/lib/com.ibm.streams.operator.samples.jar" />
	</path>

	<!-- Since not all of the libs may be available for product build, not all of the libs may be available at build time -->
	<path id="cp.manifest">
		<fileset dir="opt">
			<include name="eclipse-4.2.2/plugins/*.jar"/>
			<include name="wssupport/Java-WebSocket-1.3.0.jar"/>
			<include name="signpost-1.2/lib/*.jar"/>
			<include name="httpcomponents-client-4.5.5/lib/*.jar"/>
		</fileset>
	</path>

	<path id="cp.compile">
		<path refid="cp.streams" />
		<path refid="cp.manifest" />
	</path>

	<target name="all" depends="indextoolkit" description="build all source components and build toolkit index"/>

	<target name="init">
		<mkdir dir="${gensrc.dir}"/>
		<mkdir dir="${build.dir}" />
		<mkdir dir="${impl.lib.dir}" />
	</target>

	<target name="clean" depends="cpp-clean,cleanToolkitxml" description="clean all generated compiler, toolkit, test, document and downloaded artefacts">
		<delete verbose="true">
			<!-- The fileset with the generated spl artifacts -->
			<fileset dir="${basedir}">
				<include name="com.ibm.streamsx.inet.http/HTTPGetJSONContent/*"/>
				<include name="com.ibm.streamsx.inet.http/HTTPGetStream/*"/>
				<include name="com.ibm.streamsx.inet.http/HTTPGetXMLContent/*"/>
				<include name="com.ibm.streamsx.inet.http/HTTPPost/*"/>
				<include name="com.ibm.streamsx.inet.http/HTTPRequest/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPBLOBInjection/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPJSONInjection/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPTupleInjection/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPRequestProcess/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPTupleView/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPXMLInjection/*"/>
				<include name="com.ibm.streamsx.inet.rest/HTTPXMLView/*"/>
				<include name="com.ibm.streamsx.inet.rest/WebContext/*"/>
				<include name="com.ibm.streamsx.inet.wsserver/WebSocketInject/*"/>
				<include name="com.ibm.streamsx.inet.wsserver/WebSocketSend/*"/>
			</fileset>
		</delete>
		<delete dir="${gensrc.dir}"/>
		<delete dir="${build.dir}" />
		<delete dir="${lib.dir}" />
		<delete dir="${impl.lib.dir}" />
		<delete dir="${downloads.dir}" />
		<delete dir="output" />
		<delete dir="doc" />
		<delete dir="${nl.dir}/include"/>
		<delete>
			<fileset dir="${nl.dir}" includes="*.dat"/>
		</delete>
		<delete dir="${test.run.dir}" />
		<delete dir="${test.build.dir}" />
	</target>

	<target name="cpp" description="Build the c++ source components">
		<exec executable="make" failonerror="true" dir="impl">
			<arg value="-f" />
			<arg value="Makefile" />
			<arg value="build" />
		</exec>
	</target>

	<target name="cpp-clean" description="Cleanup the c++ build">
		<exec executable="make" failonerror="true" dir="impl">
			<arg value="-f" />
			<arg value="Makefile" />
			<arg value="clean" />
		</exec>
	</target>

	<target name="indextoolkit" depends="jar,cpp" description="Build the toolkit index">
		<echo message="Tookit to index: ${basedir}"/>
		<exec executable="${streams.install}/bin/spl-make-toolkit" failonerror="true">
			<arg value="--directory"/>
			<arg value="${basedir}"/>
			<arg value="-m"/>
		</exec>
	</target>

	<target name="cleanToolkitxml" description="Clean the toolkit index">
		<delete>
			<fileset dir="./">
				<include name="toolkit.xml" />
			</fileset>
		</delete>
	</target>

	<target name="compile" depends="init" description="Compile the java source components">
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="true" includeantruntime="no"
			source="1.8" target="1.8"
			excludes="com/ibm/streamsx/inet/*/test/**">
			<classpath>
				<path refid="cp.compile" />
			</classpath>
			<compilerarg line="-s ${gensrc.dir}"/>
			<!-- <compilerarg line="-Xlint:unchecked"/> -->
		</javac>
	</target>

	<target name="jar" depends="compile" description="Generate the java library">
		<manifestclasspath property="jar.cp.manifest" jarfile="${impl.lib.dir}/com.ibm.streamsx.inet.rest.jar">
			<classpath refid="cp.manifest" />
		</manifestclasspath>
		<jar destfile="${impl.lib.dir}/${jarfile}" filesonly="true">
			<fileset dir="${build.dir}" includes="com/ibm/streamsx/inet/**"/>
			<fileset dir="${src.dir}" includes="com/ibm/streamsx/inet/messages/*.properties"/>
			<manifest>
				<attribute name="Class-Path" value="${jar.cp.manifest}" />
			</manifest>
		</jar>
		<!-- <delete dir="${build.dir}" /> do not delete classes to enable incremental build -->
	</target>

	<!-- assumes Junit 4.3 (or later) is in $HOME/.ant/lib -->
	<target name="test" depends="jar" description="Execute the integrated unit tests">
		<mkdir dir="${test.run.dir}" />
		<mkdir dir="${test.build.dir}" />

		<javac srcdir="${src.dir}" destdir="${test.build.dir}" debug="true" includeantruntime="yes" includes="com/ibm/streamsx/inet/*/test/**">
			<classpath>
				<pathelement location="${impl.lib.dir}/${jarfile}" />
				<path refid="cp.streams" />
			</classpath>
		</javac>

		<junit printsummary="yes" haltonfailure="yes" fork="yes">
			<classpath>
				<pathelement location="${test.build.dir}" />
				<pathelement location="${impl.lib.dir}/${jarfile}" />
				<path refid="cp.streams" />
			</classpath>

			<formatter type="xml" />

			<batchtest todir="${test.run.dir}">
				<fileset dir="${src.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

</project>

