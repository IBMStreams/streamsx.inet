use com.ibm.streamsx.inet.http::HTTPRequest;
use com.ibm.streamsx.testframe::FileSink1;

public composite Main {
	param
		//<0 3>expression<rstring> $url: getSubmissionTimeValue("url", 'http://httpbin.org/get');
		//<1 4>expression<rstring> $url: getSubmissionTimeValue("url", 'http://httpbin.org/gzip');
		//<2 5>expression<rstring> $url: getSubmissionTimeValue("url", 'http://httpbin.org/deflate');
		//<0 1 2>expression<boolean> $disableComp: (boolean)getSubmissionTimeValue("disableComp", "false");
		//<3 4 5>expression<boolean> $disableComp: (boolean)getSubmissionTimeValue("disableComp", "true");
	graph
		stream<uint64 id, rstring method> Trigger as O = Beacon() {
			param 
				iterations : 1;
			output O:
				id = IterationCount(),
				method = "GET";
		}
		
		stream<uint64 id, rstring method, rstring url, rstring status, int32 stat, rstring respData> Response as O = HTTPRequest(Trigger as I) {
			param
				fixedUrl: $url;
				method : method;
				extraHeaders : "Cache-Control: no-cache";
				outputBody : "respData";
				outputStatus : "status";
				outputStatusCode : "stat";
				disableContentCompression : $disableComp;
		}
		
		() as Sink = FileSink1(Response) { }
		
	
	config
		restartable : false;
}
