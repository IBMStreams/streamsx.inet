<?xml version="1.0" encoding="UTF-8"?>
<!--
# Licensed Materials - Property of IBM
# Copyright IBM Corp. 2011, 2013
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
-->
<project name="com.ibm.streamsx.inet" basedir="." default="all">

	<property environment="env" />
	<property name="streams.install" value="${env.STREAMS_INSTALL}" />
	<property name="maven.bin" value="${env.M2_HOME}/bin/mvn" />

	<property name="src.dir" value="impl/java/src" />
	<property name="build.dir" value="impl/java/classes" />
	<property name="impl.lib.dir" value="impl/lib" />
	<property name="lib.dir" value="lib" />
	<property name="test.run.dir" value="tests" />
	<property name="test.build.dir" value="${test.run.dir}/bin" />
	<property name="ext.downloads.dir" value="opt/downloaded" />
	<property name="jarfile" value="com.ibm.streamsx.inet.jar" />
	
	<target name="init">
		<fail unless="env.M2_HOME" 
			message="Environment variable M2_HOME not set. Please set this to point to the path of maven home directory"/>
		<mkdir dir="${build.dir}" />
		<mkdir dir="${lib.dir}" />
		<mkdir dir="${impl.lib.dir}" />
		<mkdir dir="${ext.downloads.dir}" />
	</target>

	<target name="clean" depends="cpp-clean">
		<delete dir="${build.dir}" />
		<delete dir="${impl.lib.dir}" />
		<delete dir="${ext.downloads.dir}" />
		<delete dir="output"/>
		<delete dir="${test.run.dir}"/>
		<delete dir="${test.build.dir}"/>
	</target>


	<path id="cp.eclipse.jetty">
		<fileset dir="opt/eclipse-4.2.2/plugins">
			<include name="javax.servlet*.jar" />
			<include name="org.eclipse.jetty*.jar" />
		</fileset>
	</path>
	<path id="cp.streams">
		<pathelement location="${streams.install}/lib/com.ibm.streams.operator.samples.jar" />
	</path>

	<path id="cp.ext.libs">
		<fileset dir="${ext.downloads.dir}"/>
	</path>


	<path id="cp.compile">
		<path refid="cp.streams" />
		<path refid="cp.eclipse.jetty" />
		<path refid="cp.ext.libs" />
	</path>
	
	<target name="all" depends="jar,cpp"/>
	
	<target name="cpp">
		<exec executable="make" failonerror="true">
			<arg value="all"/>
	    </exec>
	</target>

	<target name="cpp-clean">
		<exec executable="make"  failonerror="true">
			<arg value="clean"/>
	    </exec>
	</target>

	<!-- Downloads libraries using maven -->
	<target name="maven-deps">
		<exec executable="${maven.bin}"  failonerror="true">
			<arg value="dependency:copy-dependencies"/>
			<arg value="-DoutputDirectory=${ext.downloads.dir}"/>
	    </exec>
	</target>
	

	<target name="compile" depends="init, maven-deps">
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="true"
			includeantruntime="no"
			excludes="com/ibm/streamsx/inet/rest/test/**">
			<classpath>
				<path refid="cp.streams" />
				<path refid="cp.eclipse.jetty" />
				<path refid="cp.ext.libs" />
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="compile">
		<manifestclasspath property="jar.cp.eclipse.jetty" jarfile="${impl.lib.dir}/${jarfile}">
			<classpath refid="cp.eclipse.jetty" />
		</manifestclasspath>
		<jar destfile="${impl.lib.dir}/${jarfile}" basedir="${build.dir}" includes="com/ibm/streamsx/inet/**" filesonly="true">
			<manifest>
				<attribute name="Class-Path" value="${jar.cp.eclipse.jetty}" />
			</manifest>
		</jar>
		<delete dir="${build.dir}" />
	</target>

        <!-- assumes Junit 4.3 (or later) is in $HOME/.ant/lib -->
	<target name="test" depends="jar">
		<mkdir dir="${test.run.dir}"/>
		<mkdir dir="${test.build.dir}"/>
		
		<javac srcdir="${src.dir}" destdir="${test.build.dir}" debug="true"
			includeantruntime="yes"
			includes="com/ibm/streamsx/inet/rest/test/**">
			<classpath>
				<pathelement location="${impl.lib.dir}/${jarfile}"/>
				<path refid="cp.streams" />
			</classpath>
		</javac>
	
		  <junit printsummary="yes" haltonfailure="yes" >
		      <classpath>
		        <pathelement location="${test.build.dir}"/>
		        <pathelement location="${impl.lib.dir}/${jarfile}"/>
		        <path refid="cp.streams" />
		      </classpath>

		      <formatter type="xml"/>
		        
		      <batchtest todir="${test.run.dir}">
		        <fileset dir="${src.dir}">
		          <include name="**/*Test.java"/>
		        </fileset>
		      </batchtest>
		    </junit>

		</target>

</project>

