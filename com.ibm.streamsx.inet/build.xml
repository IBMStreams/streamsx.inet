<?xml version="1.0" encoding="UTF-8"?>
<!--
# Licensed Materials - Property of IBM
# Copyright IBM Corp. 2011, 2013, 2014
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
-->

<!-- 
Found that if you built under Streams studio, *$StreamsModel.java
artifacts were left around and caused issues with the ant build.
-->

<project name="com.ibm.streamsx.inet" basedir="." default="all">

	<property environment="env" />
	<property name="streams.install" value="${env.STREAMS_INSTALL}" />
	<property name="maven.bin" value="${env.M2_HOME}/bin/mvn" />

	<property name="src.dir" value="impl/java/src" />
	<property name="build.dir" value="impl/java/classes" />
	<property name="impl.lib.dir" value="impl/lib" />
	<property name="lib.dir" value="lib" />
	<property name="impl.nl.dir" value="impl/nl" />
	<property name="opt.wssupport.dir" value="opt/wssupport" />
	<property name="test.run.dir" value="tests" />
	<property name="test.build.dir" value="${test.run.dir}/bin" />
	<property name="downloads.dir" value="opt/downloaded" />
	<property name="jarfile" value="com.ibm.streamsx.inet.jar" />
	<available file="opt/downloaded/.no_download" type="file" property="no.maven.deps"/>

	<target name="init">
		<fail unless="env.M2_HOME" message="Environment variable M2_HOME not set. Please set this to point to the path of maven home directory" />
		<mkdir dir="${build.dir}" />
		<mkdir dir="${lib.dir}" />
		<mkdir dir="${impl.lib.dir}" />
		<mkdir dir="${downloads.dir}" />
	</target>

	<target name="clean" depends="cpp-clean">
		<delete>
			<fileset dir="${src.dir}" includes="**/*$StreamsModel.java" />
		</delete>
		<delete dir="${build.dir}" />
		<delete dir="${impl.lib.dir}" />
		<delete dir="${downloads.dir}" />
		<delete dir="output" />
		<delete dir="doc" />
		<delete dir="${impl.nl.dir}/include"/>
		<delete>
			<fileset dir="${impl.nl.dir}" includes="*.dat"/>
		</delete>
		<delete dir="${test.run.dir}" />
		<delete dir="${test.build.dir}" />

	</target>

	<path id="cp.streams">
		<pathelement location="${streams.install}/lib/com.ibm.streams.operator.samples.jar" />
	</path>

	<!-- comment out some resources which are not used in this build -->
	<path id="cp.eclipse.jetty">
		<fileset dir="opt/eclipse-4.2.2/plugins">
			<include name="javax.servlet*.jar" />
			<include name="org.eclipse.jetty*.jar" />
		</fileset>
	</path>
	<path id="cp.wssocket">
		<fileset dir="opt/wssupport">
			<include name="Java-WebSocket-1.3.0.jar" />
		</fileset>
	</path>
	<path id="cp.http.client">
		<fileset dir="opt/HTTPClient4.2.3/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="cp.downloads">
		<fileset dir="${downloads.dir}" />
	</path>

	<path id="cp.manifest">
		<path refid="cp.eclipse.jetty" />
		<path refid="cp.wssocket" />
		<path refid="cp.http.client" />
		<path refid="cp.downloads" />
	</path>

	<path id="cp.compile">
		<path refid="cp.streams" />
		<path refid="cp.manifest" />
	</path>

	<target name="all" depends="jar,cpp,indextoolkit" />

	<target name="cpp">
		<exec executable="make" failonerror="true" dir="impl">
			<arg value="-f" />
			<arg value="Makefile" />
			<arg value="all" />
		</exec>
	</target>

	<target name="cpp-clean">
		<exec executable="make" failonerror="true" dir="impl">
			<arg value="-f" />
			<arg value="Makefile" />
			<arg value="clean" />
		</exec>
	</target>

	<target name="indextoolkit" depends="jar,cpp">
		<echo message="Tookit to index: ${basedir}"/>
		<exec executable="${streams.install}/bin/spl-make-toolkit" failonerror="true">
			<arg value="--directory"/>
			<arg value="${basedir}"/>
			<arg value="-m"/>
		</exec>
	</target>

	<target name="cleanToolkitxml">
		<delete>
			<fileset dir="./">
				<include name="toolkit.xml" />
			</fileset>
		</delete>
	</target>

	<!-- Downloads libraries using maven -->
	<target name="maven-deps" unless="no.maven.deps">
		<exec executable="${maven.bin}" failonerror="true">
			<arg value="dependency:copy-dependencies" />
			<arg value="-DoutputDirectory=${downloads.dir}" />
		</exec>
	</target>


	<target name="compile" depends="init, maven-deps">
		<javac srcdir="${src.dir}" destdir="${build.dir}" debug="true" includeantruntime="no"
			source="1.8" target="1.8"
			excludes="com/ibm/streamsx/inet/*/test/**">
			<classpath>
				<path refid="cp.compile" />
			</classpath>
		</javac>
	</target>

	<target name="jar" depends="compile">
		<manifestclasspath property="jar.cp.manifest" jarfile="${impl.lib.dir}/com.ibm.streamsx.inet.rest.jar">
			<classpath refid="cp.manifest" />
		</manifestclasspath>
		<jar destfile="${impl.lib.dir}/${jarfile}" filesonly="true">
			<fileset dir="${build.dir}" includes="com/ibm/streamsx/inet/**"/>
			<fileset dir="${src.dir}" includes="com/ibm/streamsx/inet/messages/*.properties"/>
			<manifest>
				<attribute name="Class-Path" value="${jar.cp.manifest}" />
			</manifest>
		</jar>
		<delete dir="${build.dir}" />
	</target>

	<!-- assumes Junit 4.3 (or later) is in $HOME/.ant/lib -->
	<target name="test" depends="jar">
		<mkdir dir="${test.run.dir}" />
		<mkdir dir="${test.build.dir}" />

		<javac srcdir="${src.dir}" destdir="${test.build.dir}" debug="true" includeantruntime="yes" includes="com/ibm/streamsx/inet/*/test/**">
			<classpath>
				<pathelement location="${impl.lib.dir}/${jarfile}" />
				<path refid="cp.streams" />
			</classpath>
		</javac>

		<junit printsummary="yes" haltonfailure="yes" fork="yes">
			<classpath>
				<pathelement location="${test.build.dir}" />
				<pathelement location="${impl.lib.dir}/${jarfile}" />
				<path refid="cp.streams" />
			</classpath>

			<formatter type="xml" />

			<batchtest todir="${test.run.dir}">
				<fileset dir="${src.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

</project>

