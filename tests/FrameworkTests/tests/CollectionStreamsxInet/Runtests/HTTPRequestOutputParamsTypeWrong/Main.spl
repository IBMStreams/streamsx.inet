use com.ibm.streamsx.inet.http::HTTPRequest;
use com.ibm.streamsx.testframe::FileSink1;

public composite Main {
	param
		expression<rstring> $url: getSubmissionTimeValue("url", "http://httpbin.org/get");
		expression<rstring> $data:  getSubmissionTimeValue("data", "my data");
	graph
		stream<uint64 id, rstring method, rstring data> Trigger as O = Beacon() {
			param 
				iterations : 1;
			output O:
				id = IterationCount(),
				method = "GET",
				data = $data;
		}
		
		//_0_stream<uint64 id, rstring method, rstring url, list<rstring> myAttribute, uint32 stat>
		//_1_stream<uint64 id, rstring method, rstring url, list<rstring> myAttribute, uint32 stat>
		//_2_stream<uint64 id, rstring method, rstring url, list<rstring> myAttribute, uint32 stat>
		//_3_stream<uint64 id, rstring method, rstring url, list<rstring> myAttribute, uint32 stat>
		//_4_stream<uint64 id, rstring method, rstring url, rstring myAttribute, uint32 stat>
		//_5_stream<uint64 id, rstring method, rstring url, list<uint64> myAttribute, uint32 stat>
		//_6_stream<uint64 id, rstring method, rstring url, list<rstring> myAttribute, uint32 stat>
		//_7_stream<uint64 id, rstring method, rstring url, list<rstring> myAttribute, uint32 stat>
		//_8_stream<uint64 id, rstring method, rstring url, float64 myAttribute, int32 stat>
		Response = HTTPRequest(Trigger) {
			param
				fixedUrl: $url;
				method : method;
				requestBodyAttribute : data;
				//_0_outputDataLine: "myAttribute";
				//_1_outputBody: "myAttribute";
				//_2_outputContentEncoding: "myAttribute";
				//_3_outputContentType: "myAttribute";
				//_4_outputHeader: "myAttribute";
				//_5_outputHeader: "myAttribute";
				//_6_outputStatus: "myAttribute";
				//_7_outputStatusCode: "stat";
				//_8_errorDiagnostics: "myAttribute";
				//_8_outputStatusCode: "stat";
		}

		() as Sink = FileSink1(Response) { }

	config
		restartable : false;
}
