/*
# Licensed Materials - Property of IBM
# Copyright IBM Corp. 2011, 2014 
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with
# IBM Corp.
*/
namespace com.ibm.streamsx.inet.sample.rest;

use com.ibm.streamsx.inet.rest::*;

/**
 * Simple example of an using `com.ibm.streamsx.inet.rest.HTTPTupleInjection` to feed tuples
 * into Stream InjectedTuples which are then visible through
 * the windowed `com.ibm.streamsx.ient.rest.HTTPTupleView` operator.
 * 
 * Tuples are injected using the form input at: [http://127.0.0.1:8080/InjectedTuples/ports/output/0/form]
 * 
 * or a POST to [http://127.0.0.1:8080/InjectedTuples/ports/output/0/inject]
 * 
 * And then are visible as a JSON object [http://127.0.0.1:8080/InjectView/ports/input/0/tuples]
 * 
 * This fixed URL shows information for all ports available through URLs
 * in the HTTP server [http://127.0.0.1:8080/ports/info]
 *
 * These URLs show the meta data for the ports using a JSON object:
 * * [http://127.0.0.1:8080/InjectedTuples/ports/output/0/info] - Output port for the injected tuples.
 * * [http://127.0.0.1:8080/InjectView/ports/input/0/info] - Input port to `HTTPTupleView`.
 * 
 * To compile this example:
 * 
 *     cd com.ibm.ssb.inet
 *     sc -T -M com.ibm.streamsx.inet.sample.rest::SimpleInject
 *     output/bin/standalone
 * Point browser to [http://127.0.0.1:8080]
 */
public composite SimpleInject {
	
	graph
	stream<ustring a_ustring, rstring b_rstring, int32 c_int32, float32 d_float32> InjectedTuples
	    = HTTPTupleInjection() {
	  param
		  port: 8080;
      config
	    // Ensure the operators are in a single PE to have a single web-server
	    placement: partitionColocation("jetty8080");
		  
	}
	
	() as InjectView = HTTPTupleView(InjectedTuples) {
		window InjectedTuples: sliding, count(10), count(1);
		param
		  port: 8080;
		config
	    // Ensure the operators are in a single PE to have a single web-server
	    placement: partitionColocation("jetty8080");
		  
	}

	() as WCT = WebContext() {
		param
		  port: 8080;
                  context: "wct";
                  contextResourceBase: "opt/wctest";
		config
	    // Ensure the operators are in a single PE to have a single web-server
	    placement: partitionColocation("jetty8080");
	}

       
	
}
