use com.ibm.streamsx.inet.http::HTTPRequest;
use com.ibm.streamsx.testframe::FileSink1;

public composite Main {
	param
		//<0 1 4 5 8 9 12 13  >expression<rstring> $url: "http://" + getCompileTimeValue("host") + '/getx';
		//<2 3 6 7 10 11 14 15>expression<rstring> $url: "http://" + getCompileTimeValue("host") + '/status/418';

	graph
		stream<uint64 id, rstring method, rstring data> Trigger as O = Beacon() {
			param 
				iterations : 1;
			output O:
				id = IterationCount(),
				//<0 1 2 3>method = "GET",
				//<4 5 6 7>method = "HEAD",
				//<8 9 10 11>method = "POST",
				//<12 13 14 15>method = "PUT",
				data = "My data";
		}
		
		stream<uint64 id, rstring method, rstring url, rstring status, int32 stat, rstring respData> Response as O = HTTPRequest(Trigger as I) {
			param
				fixedUrl: $url;
				method: method;
				requestBodyAttribute : data;
				//<0 2 4 6 8 10 12 14>outputBody : "respData";
				//<1 3 5 7 9 11 13 15>outputDataLine : "respData";
				outputStatus : "status";
				outputStatusCode : "stat";
		}
		
		() as Sink = FileSink1(Response) { }
		
	config
		restartable : false;
}
